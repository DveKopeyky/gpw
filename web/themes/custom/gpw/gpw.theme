<?php

/**
 * @file
 * Bootstrap sub-theme.
 *
 * Place your custom PHP code in this file.
 */
function gpw_preprocess(&$variables) {
  $variables['base_path'] = base_path();
}

function gpw_preprocess_page(&$variables) {
  // @todo: Implement field on page.
  // Enable inverse navbar based on page setting.
  if($variables['is_front']) {
    $variables['page']['navbar_inverse'] = true;
  }

  // Check for video field on webinar full page and mark title.
  if ($node = \Drupal::routeMatch()->getParameter('node')) {
    if ($node->bundle() == 'webinar') {
      if (!empty($node->field_video->getValue()) && !empty($variables['page']['title'])) {
        $variables['page']['title']['#attributes']['class'][] = 'has-video';
      }
    }
  }
}

/**
 * Implements hook_preprocess_HOOK() for block templates.
 */
function gpw_preprocess_block(&$variables) {
  // @todo: get .svg logo
  switch ($variables['base_plugin_id']) {
    case 'system_branding_block':
      $variables['site_logo'] = '';
      if ($variables['content']['site_logo']['#access'] && $variables['content']['site_logo']['#uri']) {
        $variables['site_logo'] = str_replace('.svg', '.png', $variables['content']['site_logo']['#uri']);
      }
      break;

  }
}

/**
 * Implements hook_preprocess_HOOK().
 */
function gpw_preprocess_views_view(&$variables) {
  if($variables['id'] == 'news') {
    $variables['more']['#attributes']['class'][] = 'btn btn-outline';
  }
}

/**
 * Implements hook_preprocess_HOOK().
 */
function gpw_preprocess_menu__footer(&$variables) {
  $variables['attributes']['class'][] = 'navbar-nav';
}

/**
 * Implements hook_preprocess_HOOK().
 */
function gpw_preprocess_region(&$variables) {
  if($variables['region'] == 'title') {
    $variables['attributes']['class'][] = 'hero';
    $variables['attributes']['role'] = 'heading';
  }
}

/**
 * Implements hook_preprocess_HOOK().
 */
function gpw_preprocess_page_title(&$variables) {
  /** @var \Drupal\node\Entity\Node $node */
  if ($node = \Drupal::routeMatch()->getParameter('node')) {
    // fields removed in node--meeting--full.html.twig
    if ($node->bundle() == 'meeting') {
      $variables['subtitle']['#class'] = 'meeting-subtitle';
      if (!empty($node->field_address)) {
        $variables['subtitle']['address'] = $node->field_address->view('full');
      }
      if (!empty($node->field_date_range)) {
        $variables['subtitle']['date'] = $node->field_date_range->view('full');
      }
    }

    // fields removed in node--webinar--full.html.twig
    if ($node->bundle() == 'webinar') {
      if (!empty($node->field_video->entity)) {
        $variables['video'] = $node->field_video->view('full');
      }
    }

    // fields removed in node--course--full.html.twig
    if ($node->bundle() == 'course') {
      $variables['is_full_course'] = TRUE;
      if (!empty($node->body->getValue())) {
        $variables['content_left']['body'] = $node->body->view('full');
      }
      if (!empty($node->field_key_points->getValue())) {
        $variables['content_left']['field_key_points'] = $node->field_key_points->view('full');
      }
      if (!empty($node->field_video->getValue())) {
        $variables['content_right']['field_video'] = $node->field_video->view('full');
      }
      if (!empty($node->field_e_learning_link->getValue())) {
        $variables['content_right']['field_e_learning_link'] = $node->field_e_learning_link->view('full');
      }
      if (!empty($node->field_includes->getValue())) {
        $variables['content_right']['field_includes'] = $node->field_includes->view('full');
      }
    }
  }
}

/**
 * Implements hook_preprocess_field().
 */
function gpw_preprocess_field(&$variables) {
  if ($variables['field_name'] == 'field_e_learning_link') {
    if (!empty($variables['items'])) {
      foreach ($variables['items'] as &$item) {
        $item['content']['#options']['attributes']['class'][] = 'btn';
      }
    }
  }
}

/**
 * Implements hook_preprocess_views_view_table().
 */
function gpw_preprocess_views_view_table(&$variables) {
  if ($variables['view']->element['#view_id'] == 'agenda_items') {
    $node = \Drupal::routeMatch()->getParameter('node');
    if (!$node instanceof \Drupal\node\NodeInterface) {
      return;
    }
    if (empty($node->field_agenda_items->entity)) {
      return;
    }
    // Add a class to child agenda items.
    $agenda_items = $node->field_agenda_items->getValue();
    foreach ($variables['rows'] as $idx => $row) {
      $agenda_id = $agenda_items[$idx]['target_id'];
      $agenda_item = \Drupal\eck\Entity\EckEntity::load($agenda_id);
      $is_child = $agenda_item->field_is_child->value;
      if (!empty($is_child)) {
        $variables['rows'][$idx]['attributes']->addClass('is-child');
      }
    }
    $variables['striped'] = FALSE;
    $variables['header']['field_file']['content'] = array(
      '#theme' => 'table_header_with_icon',
      '#icon' => 'file',
      '#content' => $variables['header']['field_file']['content'],
    );
    $variables['header']['field_date_range']['content'] = array(
      '#theme' => 'table_header_with_icon',
      '#icon' => 'calendar',
      '#content' => $variables['header']['field_date_range']['content'],
    );
  }
}

/**
 * Implements hook_theme().
 */
function gpw_theme($existing, $type, $theme, $path) {
  return array(
    'table_header_with_icon' => ['variables' => [
      'icon' => null,
      'content' => null
    ]],
  );
}
