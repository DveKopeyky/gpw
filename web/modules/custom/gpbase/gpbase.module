<?php

/**
 * @file
 * Contains gpbase.module.
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\eck\EckEntityInterface;
use Drupal\node\NodeInterface;
use Drupal\eck\Entity\EckEntity;

/**
 * Implements hook_help().
 */
function gpbase_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the gpbase module.
    case 'help.page.gpbase':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Includes basic website features') . '</p>';
      return $output;

    default:
  }
}

/**
 * Implements hook_ENTITY_TYPE_presave().
 */
function gpbase_child_entity_presave(EckEntityInterface $entity) {
  /** @var \Drupal\gpbase\UtilsServiceInterface $utils */
  $utils = \Drupal::service('gpbase.utils');
  switch ($entity->bundle()) {
    case 'course_section':
      try {
        $utils->computeCourseSectionFields($entity);
      }
      catch (\Exception $e) {
        \Drupal::logger('gpbase')
          ->error(t('Could not compute the fields of course_section entity (%id).', ['%id' => $entity->id()]));
      }
      break;
  }
}

/**
 * Implements hook_ENTITY_TYPE_update().
 */
function gpbase_node_update(NodeInterface $node) {
  /** @var \Drupal\gpbase\UtilsServiceInterface $utils */
  $utils = \Drupal::service('gpbase.utils');
  switch ($node->bundle()) {
    case 'course':
      $sections = array_column($node->field_course_sections->getValue(), 'target_id');
      foreach ($sections as $sectionId) {
        $section = EckEntity::load($sectionId);
        try {
          $original = $section->field_video_duration->value;
          $utils->computeCourseSectionFields($section);
          $updated = $section->field_video_duration->value;
          if ($original != $updated) {
            $section->save();
          }
        }
        catch (\Exception $e) {
          \Drupal::logger('gpbase')
            ->error(t('Could not compute the fields of course_section entity (%id).', ['%id' => $entity->id()]));
        }
      }
      break;
  }
}
